---
title: Мини-песочница разметки markdown
headerImg: 2016-12-09-entermarkdown.png
tags: markdown, себе
---

**Markdown** - это простой формат разметки текстовой информации человеком, который легко писать и (немаловажно) читать. Подробнее про этот формат можно почитать 
[на страничке создателя](https://daringfireball.net/projects/markdown/syntax), но лучше обратиться к [документации к pandoc](http://pandoc.org/MANUAL.html#pandocs-markdown),
поскольку эта haskell-библиотека 
обобщает формат `md` для генерации огромного числа других репрезентаций текста (pdf, word, odt, ...), а не только HTML.

**Внимание:**

>
> Текст на этой странице не несёт смысла и предназначен для демонстрации возможностей markdown.
>
> Эту страницу следует читать в её исходнике (file.markdown), смотря на готовый результат в HTML
>
-----------------------

# Первый заголовок.

Параграф ля ля ля^[Не стоит смотреть на эту HTML страницу. Смотрите на её исходник, т.е. *markdown* файл.]. Продолжение
параграфа ля ля.\
Новая строка?

После параграфа следует одна или более пустых строк, т.е. это уже следующий параграф.

# Заголовок A, уровень 1
Текст под заголоком.

### Подзаголовок, уровень 2 {#lala}
Текст под внутренним заголовком

# Заголовок Б, уровень 1
Текст под заголоком. Простой список
1. апельсин
2. банан
3. яблоко
И другие фрукты параграфа после списка.

Смотри секцию под [подзаголовком А](#lala) (идентификатор #lala) или [под заголовком Б][Заголовок Б, уровень 1]. Очень круто.

> This is a block quote. This
> paragraph has two lines.
>
> 1. This is a list inside a block quote.
> 2. Second item.

А это уже просто текст следующего параграфа. Символ > в блок-цитате выше должен быть в начале строки. Пробелы после > считаются частью самого маркера; 
чтобы сделать реальный отступ надо использовать пять пробелов или больше:

> Просто блок-цитата

>      цитата с отступом

>             ещё цитата с отступом

Вот так. На этом всё о блок-цитатах.

Текст, начинающийся с табуляции, считается verbatim, то есть отображается в блоге "как есть":

	if (a > 3) {
		moveShip(5 * gravity, DOWN);
	}

Следует обратить внимание, что это свойство, блок-цитаты (выше) и другие стили форматирования относятся к параграфам, то есть кускам текста, отделённым от осталного 
содержимого одной или более пустой строкой. То есть verbatim-текст выше - это, формально, другой параграф.

## Блоки кода
Можно легко отображать блоки кода:

~~~~~~~ c
if (a > 3) {
  moveShip(5 * gravity, DOWN);
}
~~~~~~~

Это очень удобно; поддерживается множество syntax-highlighting для скриптов и языков программирования. Блоки кода без указания языка программирования/подсветки 
эквивалентны обычным verbatim-блокам с клавишы tab?\
Можно и нумерацию строк добавить (и/или идентификатор для ссылки):

~~~~~~~ {.haskell .numberLines startFrom="10"}
qsort []     = []
qsort (x:xs) = qsort (filter (< x) xs) ++ [x] ++
               qsort (filter (>= x) xs)
~~~~~~~

Есть line blocks для стихов или адресов, это блок со строками, начинающимися с | :

| The limerick packs laughs anatomical
| In space that is quite economical.
|    But the good ones I've seen
|    So seldom are clean
| And the clean ones so seldom are comical

Адрес: 

| 200 Main St.
| Berkeley, CA 94718

Вот так.

## Списки сквозные и номерные
Удобно делать списки:

* элемент А
* элемент Б\
У элемента Б есть параграф. С кодом и цитатой:

	~~~~~~~ c
	if (a > 3) {
		moveShip(5 * gravity, DOWN);
	}
	~~~~~~~
	
	Цитата:
	
	> To be or not to be?
	
	Все новые блоки внутри блока элемента списка должны начинаться с таба (это логично).
	
* элемент В

А это уже новый параграф (блок) после списка. Собственно, в списке выше каждый *  начинает параграф. Можно вкладывать списки друг в друга:

* fruits
    + apples
        - macintosh^[Причём тут макинтош, для меня загадка.]
        - red delicious
    + pears
    + peaches
* vegetables
    + broccoli
    + chard

Знаки *, + и - отрисовываются в "точку" немного по-разному, см. выше. Номерные списки:

1.  one
2.  two
	i. правило один
	ii. правило два (римские цифры)
3.  three

Вот, собственно, и всё про базовый синтаксис markdown.\
Кстати, много символов - или * дают горизонтальную линию.

-------------------------

# Дополнительно

## Дефиниции
Есть и такой формат, удобный для определений. Фактически, ничего нового.

Term 1

:   Definition 1

Term 2 with *inline markup*

:   Definition 2

        { some code, part of Definition 2 }

    Third paragraph of definition 2.

* * * * * * * * * * *

## Список примеров
Вот такой:

(@)  My first example will be numbered (1).
(@)  My second example will be numbered (2).

Explanation of examples.

(@)  My third example will be numbered (3).

То есть (@) автоматически заменяется на цифру в скобках?

# Таблицы
Есть и таблицы:

  Right     Left     Center     Default
-------     ------ ----------   -------
     12     12        12            12
    123     123       123          123
      1     1          1             1

Table:  Demonstration of simple table syntax.

Крутяк. Текст в ячейках может быть на нескольких строках:

----------- ------- --------------- -------------------------
   First    row                12.0 Example of a row that
                                    spans multiple lines.

  Second    row                 5.0 Here's another one. Note
                                    the blank line between
                                    rows.
----------- ------- --------------- -------------------------

А вот сложная таблица с выравниванием.

-------------------------------------------------------------
 Centered   Default           Right Left
  Header    Aligned         Aligned Aligned
----------- ------- --------------- -------------------------
   First    row                12.0 Example of a row that
                                    spans multiple lines.

  Second    row                 5.0 Here's another one. Note
                                    the blank line between
                                    rows.
-------------------------------------------------------------

Table: Here's the caption. It, too, may span
multiple lines.

Выравнивание:

-----------------------------------
русский      английский  норвежский
-----------  ----------  ----------
одн / \         one         en
ед(и)н


два          two         to


три          three       tre
------------------------------------

Слишком просто, чтобы быть правдой!


Вот так! Можно и по-другому (удобно из emacs):

+---------------+---------------+--------------------+
| Fruit         | Price         | Advantages         |
+===============+===============+====================+
| Bananas       | $1.34         | - built-in wrapper |
|               |               | - bright color     |
+---------------+---------------+--------------------+
| Oranges       | $2.10         | - cures scurvy     |
|               |               | - tasty            |
+---------------+---------------+--------------------+


------------------------
# Выделение слов в тексте
Можно выделать слова жирным или курсивом. This text is _emphasized with underscores_, and this
is *emphasized with asterisks*. This is **strong emphasis** and __with underscores__. This ~~is deleted text.~~

Это будет работать в markdown, но при генерации html-страниц блога стили CSS могут переопределять стили pandoc?

А можно написать вот так: H~2~O is a liquid.  Или 2^10^ is 1024. Почти как в L~A~T~E~X.

# Ссылки на объекты внутри текста или вне его (URI)
Можно тупо написать текст в угловых кавычках и получить ссылки вроде <http://google.com> и <sam@green.eggs.ham>.

Вообще же, формат таков: \[текст\]\(URL\). Например: Эй, [тут](http://nbrk.linklevel.net) моя страничка!

Можно и так: See [my website]. Т.е. расшифровать ссылки в конце текста.

[my website]: http://foo.bar.baz

## Картинки
Ссылкы после ! будут трактоваться как картинки. Например, ![](../static/img/haskell-logo.png)

# Прочее
Можно добавить фон к тексту (выделить его): what is the difference between `>>=` and `>>`?

Всё между `$ ... $` будет трактоваться как T~e~X математика. Вообще, можно встраивать все команды T~e~X и L~A~T~E~X прямо в markdown **без изменения**!

## Примечания
Даже примечания можно оставлять. Просто и понятно.
Here is an inline note.^[Inlines notes are easier to write, since
you don't have to pick an identifier and move down to type the
note.]

